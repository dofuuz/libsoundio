name: CI Build

on: [push, pull_request]

jobs:
  amd64_windows_msvc:
    runs-on: windows-2016
    steps:
    - uses: actions/checkout@v2
    # libsoundio can't build with CMake 3.18 https://github.com/microsoft/Azure-Kinect-Sensor-SDK/issues/1363
    - name: Cache Choco
      id: cache-choco
      uses: actions/cache@v2
      with:
        path: |
          C:\ProgramData\chocolatey\bin
          C:\ProgramData\chocolatey\lib
          C:\Program Files\CMake
        key: ${{ runner.os }}-choco
    - run: choco install cmake --version=3.17.5
    - run: cmake --version
    - run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build --config Release
    - uses: actions/upload-artifact@v2
      with:
        name: build-amd64_windows_msvc
        path: "build/*"
    # This will fail because there are no sound device on CI build machine
    - run: |
        cd build/Release
        ./unit_tests
        ./sio_list_devices
      continue-on-error: true

  amd64_windows_gcc:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
      with:
        install: make cmake mingw-w64-x86_64-make mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc
    - run: |
        mingw32-make --version
        cmake --version
    - run: cmake -B build -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build --config Release
    - uses: actions/upload-artifact@v2
      with:
        name: build-amd64_windows_gcc
        path: "build/*"
    # This will fail because there are no sound device on CI build machine
    - run: |
        cd build
        ./unit_tests
        ./sio_list_devices
      continue-on-error: true

  amd64_linux_gcc:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt install -y libasound2-dev libjack-jackd2-dev libpulse-dev
    - run: cmake --version
    - run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build --config Release
    - run: tar caf build.tar.gz build
    - uses: actions/upload-artifact@v2
      with:
        name: build-amd64_linux_gcc
        path: "*.tar.gz"
    - run: |
        cd build
        ./unit_tests
        ./sio_list_devices
      continue-on-error: true

  macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - run: cmake --version
    - run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build --config Release
    - run: tar caf build.tar.gz build
    - uses: actions/upload-artifact@v2
      with:
        name: build-macos
        path: "*.tar.gz"
    - run: |
        cd build
        ./unit_tests
        ./sio_list_devices
      continue-on-error: true
